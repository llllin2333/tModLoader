--- src/Terraria/Terraria/Initializers/LaunchInitializer.cs
+++ src/tModLoader/Terraria/Initializers/LaunchInitializer.cs
@@ -1,6 +_,9 @@
 using System;
 using System.Diagnostics;
+using System.Linq;
+using System.Text.RegularExpressions;
 using Terraria.Localization;
+using Terraria.ModLoader.Core;
 using Terraria.Social;
 
 namespace Terraria.Initializers
@@ -24,6 +_,10 @@
 			string s;
 			if ((s = TryParameter("-p", "-port")) != null && int.TryParse(s, out int result))
 				Netplay.ListenPort = result;
+
+			string modPack;
+			if ((modPack = TryParameter("-modpack")) != null)
+				ModOrganizer.commandLineModPack = modPack;
 		}
 
 		private static void LoadClientParameters(Main game) {
@@ -39,6 +_,29 @@
 
 			if (HasParameter("-host"))
 				game.AutoHost();
+
+			if (HasParameter("-skipselect")) {
+				string skipSelectArgs = TryParameter(new string[] { "-skipselect" });
+				string playerName = null;
+				string worldName = null;
+				if (skipSelectArgs != null) {
+					Regex cmdRegEx = new Regex(@"(?<name>.*?):(?<val>.*)");
+					Match m = cmdRegEx.Match(skipSelectArgs);
+					if (m.Success) {
+						playerName = m.Groups["name"].Value;
+						worldName = m.Groups["val"].Value;
+					}
+				}
+
+				ModLoader.ModLoader.OnSuccessfulLoad += () => {
+					WorldGen.clearWorld();
+					Main.LoadPlayers();
+					(Main.PlayerList.FirstOrDefault(x => x.Name == playerName) ?? Main.PlayerList[0]).SetAsActive();
+					Main.LoadWorlds();
+					(Main.WorldList.FirstOrDefault(x => x.Name == worldName) ?? Main.WorldList[0]).SetAsActive();
+					WorldGen.playWorld();
+				};
+			}
 		}
 
 		private static void LoadServerParameters(Main game) {
@@ -100,6 +_,24 @@
 			if ((s2 = TryParameter("-language")) != null)
 				LanguageManager.Instance.SetLanguage(s2);
 
+			// We handle the build parameter this far in
+			// so vanilla can take care of loading the appropriate localization keys beforehand
+			string build;
+			if ((build = TryParameter("-build")) != null)
+				// Inside the build from command line, the application exits
+				// Anything beyond this point will not be executed
+				ModCompile.BuildModCommandLine(build);
+
+			string publish;
+			if ((publish = LaunchInitializer.TryParameter("-publish")) != null) {
+				ModLoader.UI.UIModSourceItem.PublishModCommandLine(publish, TryParameter("-passphrase"), TryParameter("-steamid64"));
+				// Application Exits
+			}
+
+			string install;
+			if ((install = TryParameter("-install")) != null)
+				FileAssociationSupport.HandleFileAssociation(install);
+
 			string worldName;
 			if ((worldName = TryParameter("-worldname")) != null)
 				game.SetWorldName(worldName);
@@ -107,6 +_,15 @@
 			string newMOTD;
 			if ((newMOTD = TryParameter("-motd")) != null)
 				game.NewMOTD(newMOTD);
+
+			string modPath;
+			if ((modPath = TryParameter(new string[] {
+				"-modpath"
+			})) != null)
+				ModOrganizer.modPath = modPath;
+
+			if (HasParameter("-showserverconsole"))
+				Main.showServerConsole = true;
 
 			string banFilePath;
 			if ((banFilePath = TryParameter("-banlist")) != null)
